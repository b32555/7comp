import numpy as np

def f(x, y):
  return -y + np.exp(x)

def euler_method(x0, y0, h, xn):
  y = y0
  x = x0
  
  while x < xn:
    y = y + h * f(x, y)
    x += h
  return y

# Параметры задачи
x0 = 0
y0 = 1.5
h = 0.1
xn = 1

# Точное решение
def exact_solution(x):
  return (np.exp(x) / 2) + np.exp(-x)

# Вычисление приближенного и точного решения
x_values = np.arange(x0, xn + h, h)
y_euler = []
y_exact = []
for x in x_values:
  y_euler.append(euler_method(x0, y0, h, x))
  y_exact.append(exact_solution(x))

# Вывод результатов
print("x_i | y_i (приближенное) | y_i (точное) | Разность")
print("---|---|---|---")
for i in range(len(x_values)):
  print(f"{x_values[i]:.1f} | {y_euler[i]:.4f} | {y_exact[i]:.4f} | {abs(y_euler[i] - y_exact[i]):.4f}")
